// ********RoostGPT********
/*
Test generated by RoostGPT for test checkNodejsDepsInstalled using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=fetchWeather_8dcf21317f
ROOST_METHOD_SIG_HASH=fetchWeather_2ec6f97b3f


*/

// ********RoostGPT********
const request = require('request');
const fetchWeather = require('./fetch-weather');

jest.mock('request');

describe('fetchWeather', () => {
  beforeAll(() => {
    request.mockClear();
  });

  test('should fetch weather data for a given location', done => {
    const mockResponse = {
      statusCode: 200,
      body: {
        weather: [
          { 
            main: 'Clear',
            description: 'clear sky',
          },
        ],
        main: {
          temp: 280.32,
        },
      },
    };
    
    request.mockImplementation((options, callback) => {
      callback(null, mockResponse, mockResponse.body);
    });
    
    fetchWeather('London', data => {
      expect(request).toHaveBeenCalledTimes(1);
      expect(data).toEqual(mockResponse.body);
      done();
    });
  });

  test('should handle request errors', done => {
    const mockError = new Error('Request failed');

    request.mockImplementation((options, callback) => {
      callback(mockError, null, null);
    });

    fetchWeather('London', data => {
      expect(request).toHaveBeenCalledTimes(1);
      expect(data).toBeUndefined();
      done();
    });
  });
});
