// ********RoostGPT********
/*
Test generated by RoostGPT for test testM using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=869bcf28d1
ROOST_METHOD_SIG_HASH=75d10f69f9


*/

// ********RoostGPT********
const expect = require('chai').expect;
const sinon = require('sinon');
const prepareData = require('./preparing-data');

describe('Test that the data fetched from OpenWeatherMap is processed correctly', function () {
  let callback;

  beforeEach(function () {
    callback = sinon.stub();
    callback.withArgs("London").returns(rawWeatherData);
  });

  it('Should check fetched data is processed correctly', function () {
    const result = prepareData(callback("London"));
    expect(result).to.be.an('object');
    expect(result).to.have.property('temperature');
    expect(result).to.have.property('humidity');
    expect(result).to.have.property('description');
  });

  it('Should return error when invalid city is passed', function () {
    callback.withArgs("InvalidCity").throws(new Error('City not found'));
    expect(() => prepareData(callback("InvalidCity"))).to.throw('City not found');
  });
});
