// ********RoostGPT********
/*
Test generated by RoostGPT for test testJ using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=averageTemp_700473064c
ROOST_METHOD_SIG_HASH=averageTemp_db5e66b0a6


*/

// ********RoostGPT********
// Import jest
const { test, expect } = require('@jest/globals');

// Import the function to test
const averageTemp = require('./prepared-for-the-weather');

// Define the test suite
describe('averageTemp function', () => {
  // Test case for valid min and max temperatures
  test('it should return average temperature when valid min and max temperatures are provided', () => {
    expect(averageTemp(20, 30)).toBe(25);
    expect(averageTemp(-10, 10)).toBe(0);
    expect(averageTemp(100, 200)).toBe(150);
  });

  // Test case for invalid min or max temperatures
  test('it should return NaN when invalid min or max temperatures are provided', () => {
    expect(averageTemp('20', 30)).toBe(NaN);
    expect(averageTemp(20, '30')).toBe(NaN);
    expect(averageTemp('20', '30')).toBe(NaN);
    expect(averageTemp(null, undefined)).toBe(NaN);
    expect(averageTemp()).toBe(NaN);
  });
});
