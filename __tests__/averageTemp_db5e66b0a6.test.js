// ********RoostGPT********
/*
Test generated by RoostGPT for test testing-nodejs using AI Type  and AI Model 

ROOST_METHOD_HASH=averageTemp_700473064c
ROOST_METHOD_SIG_HASH=averageTemp_db5e66b0a6


*/

// ********RoostGPT********
const { averageTemp } = require('../weather/prepared-for-the-weather');

describe('Test for averageTemp function', () => {
  test('Should return average temperature for valid min and max temperatures', () => {
    const min = 10;
    const max = 20;
    const expectedAverage = 15;
    const actualAverage = averageTemp(min, max);
    expect(actualAverage).toBe(expectedAverage);
  });

  test('Should return NaN for invalid min temperature', () => {
    const min = 'invalid';
    const max = 20;
    const expectedAverage = NaN;
    const actualAverage = averageTemp(min, max);
    expect(actualAverage).toBeNaN();
  });

  test('Should return NaN for invalid max temperature', () => {
    const min = 10;
    const max = 'invalid';
    const expectedAverage = NaN;
    const actualAverage = averageTemp(min, max);
    expect(actualAverage).toBeNaN();
  });

  test('Should return NaN for both invalid min and max temperatures', () => {
    const min = 'invalid';
    const max = 'invalid';
    const expectedAverage = NaN;
    const actualAverage = averageTemp(min, max);
    expect(actualAverage).toBeNaN();
  });
});
