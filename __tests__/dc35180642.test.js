// ********RoostGPT********
/*
Test generated by RoostGPT for test checkNodejsDepsInstalled using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=4c53294148
ROOST_METHOD_SIG_HASH=dc35180642


*/

// ********RoostGPT********
const fetchWeather = require('./fetchWeather');
const prepareForWeather = require('./prepareForWeather');

describe('fetchWeather function', () => {
  
  let today;
  
  beforeAll(() => {
    today = 'sunny';
  });
  
  test('should call the doINeed method for each item in weatherKit', () => {
    const mockDoINeed = jest.spyOn(prepareForWeather, 'doINeed');
    fetchWeather(today, () => {});
    expect(mockDoINeed).toHaveBeenCalledTimes(4);
  });
  
  test('should call the printLine method for each item in weatherKit', () => {
    const mockPrintLine = jest.fn();
    global.printLine = mockPrintLine;
    fetchWeather(today, () => {});
    expect(mockPrintLine).toHaveBeenCalledTimes(4);
  });
  
  test('should properly pass the parameters to the printLine method', () => {
    const mockPrintLine = jest.fn();
    global.printLine = mockPrintLine;
    fetchWeather(today, () => {});
    expect(mockPrintLine).toHaveBeenCalledWith(prepareForWeather.doINeed.umbrella(today), 'Umbrella');
    expect(mockPrintLine).toHaveBeenCalledWith(prepareForWeather.doINeed.suncream(today), 'Suncream');
    expect(mockPrintLine).toHaveBeenCalledWith(prepareForWeather.doINeed.jumper(today), 'Jumper');
    expect(mockPrintLine).toHaveBeenCalledWith(prepareForWeather.doINeed.water(today), 'Water');
  });
});
