// ********RoostGPT********
/*
Test generated by RoostGPT for test testM using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=4c53294148
ROOST_METHOD_SIG_HASH=dc35180642


*/

// ********RoostGPT********
const fetchWeather = require('./fetchWeather');
const prepareForWeather = require('./prepareForWeather');
const assert = require('assert');

describe('fetchWeather', function() {
    let location;
    let today;

    beforeEach(function() {
        location = 'New York';
        today = {
            temperature: 20,
            rain: false,
            sun: true
        };
    });

    it('should prepare correct weather kit for sunny day', function(done) {
        fetchWeather.fetchWeather(location, function(today) {
            let weatherKit = [{
                'name': 'Umbrella',
                'value': prepareForWeather.doINeed.umbrella(today)
            }, {
                'name': 'Suncream',
                'value': prepareForWeather.doINeed.suncream(today)
            }, {
                'name': 'Jumper',
                'value': prepareForWeather.doINeed.jumper(today)
            }, {
                'name': 'Water',
                'value': prepareForWeather.doINeed.water(today)
            }];

            assert.strictEqual(weatherKit[0].value, false);
            assert.strictEqual(weatherKit[1].value, true);
            assert.strictEqual(weatherKit[2].value, false);
            assert.strictEqual(weatherKit[3].value, true);

            done();
        });
    });

    it('should handle errors correctly', function(done) {
        location = null;

        fetchWeather.fetchWeather(location, function(today) {
            assert.throws(function() {
                let weatherKit = [{
                    'name': 'Umbrella',
                    'value': prepareForWeather.doINeed.umbrella(today)
                }, {
                    'name': 'Suncream',
                    'value': prepareForWeather.doINeed.suncream(today)
                }, {
                    'name': 'Jumper',
                    'value': prepareForWeather.doINeed.jumper(today)
                }, {
                    'name': 'Water',
                    'value': prepareForWeather.doINeed.water(today)
                }];
            }, Error);

            done();
        });
    });
});
