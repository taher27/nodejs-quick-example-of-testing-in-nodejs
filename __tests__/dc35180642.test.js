// ********RoostGPT********
/*
Test generated by RoostGPT for test testM using AI Type Open AI and AI Model gpt-4

ROOST_METHOD_HASH=4c53294148
ROOST_METHOD_SIG_HASH=dc35180642


*/

// ********RoostGPT********
const expect = require('chai').expect;
const fetchWeather = require('./weather/app');
const prepareForWeather = require('./weather/prepareForWeather');

describe('fetchWeather', () => {
  let today;
  beforeEach(() => {
    today = {
      temp: 25,
      rain: false,
      sun: true
    };
  });

  it('should prepare correct weather kit for sunny day', (done) => {
    fetchWeather.fetchWeather(today, (weatherKit) => {
      expect(weatherKit).to.be.an('array');
      expect(weatherKit).to.deep.include.members([
        { 'name': 'Umbrella', 'value': false },
        { 'name': 'Suncream', 'value': true },
        { 'name': 'Jumper', 'value': false },
        { 'name': 'Water', 'value': true }
      ]);
      done();
    });
  });

  it('should prepare correct weather kit for rainy day', (done) => {
    today.rain = true;
    today.sun = false;
    fetchWeather.fetchWeather(today, (weatherKit) => {
      expect(weatherKit).to.be.an('array');
      expect(weatherKit).to.deep.include.members([
        { 'name': 'Umbrella', 'value': true },
        { 'name': 'Suncream', 'value': false },
        { 'name': 'Jumper', 'value': true },
        { 'name': 'Water', 'value': false }
      ]);
      done();
    });
  });

  it('should throw error for invalid weather data', () => {
    expect(() => fetchWeather.fetchWeather(null)).to.throw('Invalid weather data');
  });
});
