// ********RoostGPT********
/*
Test generated by RoostGPT for test testing-nodejs using AI Type  and AI Model 

ROOST_METHOD_HASH=processResults_5b4b3cfa63
ROOST_METHOD_SIG_HASH=processResults_30cabeaee6


*/

// ********RoostGPT********
// __tests__/fetch-weather.test.js

const { processResults } = require('../weather/fetch-weather');

describe('processResults', () => {
  let allResults;

  beforeEach(() => {
    allResults = {
      main: {
        temp_min: 280, // 6.85 Celsius
        temp_max: 300, // 26.85 Celsius
      },
      rain: {
        '3h': 2, // 2mm
      },
      clouds: {
        all: 20, // 20%
      },
    };
  });

  test('returns correct weather information when allResults is not null', () => {
    const result = processResults(allResults);

    expect(result.minTemp).toBeCloseTo(6.85, 2);
    expect(result.maxTemp).toBeCloseTo(26.85, 2);
    expect(result.chanceRain).toBe(0.83);
    expect(result.rainFall).toBe(2);
    expect(result.cloudCover).toBe(20);
  });

  test('returns empty object when allResults is null', () => {
    const result = processResults(null);

    expect(result).toEqual({});
  });

  test('returns default values when allResults properties are undefined', () => {
    allResults.main.temp_min = undefined;
    allResults.main.temp_max = undefined;
    allResults.rain = undefined;
    allResults.clouds.all = undefined;

    const result = processResults(allResults);

    expect(result.minTemp).toBeCloseTo(-263.15, 2); // default value in Celsius
    expect(result.maxTemp).toBeCloseTo(-263.15, 2); // default value in Celsius
    expect(result.chanceRain).toBe(0.83);
    expect(result.rainFall).toBe(0); // default value
    expect(result.cloudCover).toBe(10); // default value
  });
});
